version: "3"
services: # 服务
    node: # node 服务
        build: ./node # Dockerfile 的目录，用于构建镜像
        # container_name: node-server-1 # 容器名称
        # ports: # 暴露的端口
            # - "3000:3000"
        expose:
            - "3000"
        links:
            - mongodb
        restart: always # 自动重启
        environment: 
            - NODE_ENV=production
        networks: # 加入网络
            - "my-network"
        command: npm run start # 覆盖容器启动后默认执行的命令
    nginx:
        image: nginx:stable-alpine
        ports: # 将本机的 8080 端口映射到容器的80端口
            - "8080:80"            
        container_name: nginx-node
        restart: always
        volumes: # 映射本机 nginx.conf 文件到 容器的 /etc/nginx/nginx.conf:ro 文件
            - "/Users/leo/Desktop/docker-test/nginx.conf:/etc/nginx/nginx.conf:ro"
        networks: 
            - "my-network"
        links: # 设置 node 服务别名，其实是设置/etc/hosts的域名解析
            - "node"
        depends_on: # 指定依赖于哪个服务
            - node
    mongodb:
        image: mongo:4.4.14
        container_name: mongodb
        restart: always
        networks: 
            - "my-network"
        ports:
            - 27017:27017
        privileged: true
        volumes:
            - ./data/db:/data/db
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: mongo123
networks: # 网络
    my-network: # 网络名称
        driver: bridge